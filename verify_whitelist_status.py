#!/usr/bin/env python3
"""
–û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ whitelist —Å—Ç–∞—Ç—É—Å–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–∞
"""

import requests
import json

def verify_production_whitelist():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ whitelist —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–∞"""
    
    print("üéØ –û–ö–û–ù–ß–ê–¢–ï–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê WHITELIST")
    print("=" * 40)
    
    production_server = "46.250.234.89:5000"
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º IP –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–∞
    try:
        print("1Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ IP –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–∞...")
        server_info = requests.get(f"http://{production_server}/api/diagnostics/server", timeout=15)
        
        if server_info.status_code == 200:
            data = server_info.json()
            server_ip = data.get("external_ip", "Unknown")
            print(f"   üìç IP –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–∞: {server_ip}")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è IP: HTTP {server_info.status_code}")
            return
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return
    
    # 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–µ—Ä–≤–µ—Ä–Ω—ã–π curl
    try:
        print("\n2Ô∏è‚É£ –¢–µ—Å—Ç —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ curl...")
        curl_test = requests.post(f"http://{production_server}/api/samo/server-curl-test", timeout=30)
        
        if curl_test.status_code == 200:
            curl_data = curl_test.json()
            
            http_code = curl_data.get("http_code", "000")
            response = curl_data.get("response", "")
            
            print(f"   üìä HTTP Code: {http_code}")
            print(f"   üìÑ Response: {response[:100]}{'...' if len(response) > 100 else ''}")
            
            if http_code == "200":
                print("\n‚úÖ –£–°–ü–ï–•! –ü–†–û–î–ê–ö–®–ù –°–ï–†–í–ï–† –í WHITELIST")
                print("   SAMO API –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ–Ω")
                return True
                
            elif http_code == "403":
                print("\n‚ùå –ü–†–û–î–ê–ö–®–ù –°–ï–†–í–ï–† –ù–ï –í WHITELIST")
                print("   HTTP 403 - IP –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
                if "blacklisted" in response.lower():
                    print(f"   üîç –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ: {response}")
                    
                return False
                
            elif http_code == "500":
                print("\n‚ö†Ô∏è –ù–ï–û–ü–†–ï–î–ï–õ–ï–ù–ù–´–ô –°–¢–ê–¢–£–°")
                print("   HTTP 500 - –≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ —Å —Ç–æ–∫–µ–Ω–æ–º")
                return False
                
            else:
                print(f"\n‚ö†Ô∏è –ù–ï–û–ñ–ò–î–ê–ù–ù–´–ô HTTP –ö–û–î: {http_code}")
                return False
                
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ curl —Ç–µ—Å—Ç–∞: HTTP {curl_test.status_code}")
            return False
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ curl —Ç–µ—Å—Ç–∞: {e}")
        return False
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É SAMO
    try:
        print("\n3Ô∏è‚É£ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ SAMO API...")
        samo_diag = requests.get(f"http://{production_server}/api/diagnostics/samo", timeout=15)
        
        if samo_diag.status_code == 200:
            samo_data = samo_diag.json()
            
            api_status = samo_data.get("tests", {}).get("api_endpoint", {}).get("status_code")
            dns_status = samo_data.get("tests", {}).get("dns_resolution", {}).get("status")
            
            print(f"   üì° DNS Status: {dns_status}")
            print(f"   üåê API Status: {api_status}")
            
            if api_status == 200:
                print("   ‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç: SAMO API —Ä–∞–±–æ—Ç–∞–µ—Ç")
                return True
            elif api_status == 403:
                print("   ‚ùå –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç: IP –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
                return False
            elif api_status == 500:
                print("   ‚ö†Ô∏è –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç: –ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º")
                return False
                
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: HTTP {samo_diag.status_code}")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: {e}")

def main():
    result = verify_production_whitelist()
    
    print(f"\nüéØ –§–ò–ù–ê–õ–¨–ù–û–ï –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï:")
    print("=" * 30)
    
    if result is True:
        print("‚úÖ –ü–†–û–î–ê–ö–®–ù –°–ï–†–í–ï–† 46.250.234.89 –í WHITELIST")
        print("   SAMO API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("   –°—Ç–∞—Ç—É—Å –¥–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å '–ü–æ–¥–∫–ª—é—á–µ–Ω'")
        print("\nüìã –î–µ–π—Å—Ç–≤–∏—è:")
        print("   1. –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É SAMO —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        print("   2. –°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–∏—Ç—Å—è –Ω–∞ –∑–µ–ª–µ–Ω—ã–π")
        print("   3. –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ SAMO API –∑–∞—Ä–∞–±–æ—Ç–∞—é—Ç")
        
    elif result is False:
        print("‚ùå –ü–†–û–î–ê–ö–®–ù –°–ï–†–í–ï–† 46.250.234.89 –ù–ï –í WHITELIST")
        print("   –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ IP –≤ whitelist")
        print("\nüìã –î–µ–π—Å—Ç–≤–∏—è:")
        print("   1. –û–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É SAMO")
        print("   2. –ó–∞–ø—Ä–æ—Å–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ IP 46.250.234.89")
        print("   3. –£–∫–∞–∑–∞—Ç—å OAuth —Ç–æ–∫–µ–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏")
        
    else:
        print("‚ö†Ô∏è –°–¢–ê–¢–£–° –ù–ï–û–ü–†–ï–î–ï–õ–ï–ù")
        print("   –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞")
        print("\nüìã –î–µ–π—Å—Ç–≤–∏—è:")
        print("   1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–æ–∫–µ–Ω–∞")
        print("   2. –£–±–µ–¥–∏—Ç—å—Å—è —á—Ç–æ IP –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
        print("   3. –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Ç–µ—Å—Ç —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è")

if __name__ == "__main__":
    main()