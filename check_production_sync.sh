#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–æ–¥–∞ –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–µ

echo "üîç –ü–†–û–í–ï–†–ö–ê –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò –ü–†–û–î–ê–ö–®–ù –°–ï–†–í–ï–†–ê"
echo "=========================================="

SERVER="46.250.234.89"
PORT="5000"

echo "üìç –°–µ—Ä–≤–µ—Ä: $SERVER:$PORT"
echo ""

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞
echo "1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞..."
if curl -fsS "http://$SERVER:$PORT/health" >/dev/null 2>&1; then
    echo "‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω"
else
    echo "‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω!"
    exit 1
fi

# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint
echo ""
echo "2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint..."
health_response=$(curl -fsS "http://$SERVER:$PORT/health" 2>/dev/null)
if echo "$health_response" | grep -q '"status":"healthy"'; then
    echo "‚úÖ Health endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    echo "   Response: $health_response"
else
    echo "‚ùå Health endpoint –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç"
    echo "   Response: $health_response"
fi

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏—Ö API (–¥–æ–ª–∂–Ω—ã –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å JSON)
echo ""
echo "3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏—Ö API..."

api_endpoints=(
    "environment"
    "server" 
    "network"
    "samo"
)

for endpoint in "${api_endpoints[@]}"; do
    echo "   –ü—Ä–æ–≤–µ—Ä–∫–∞ /api/diagnostics/$endpoint..."
    response=$(curl -fsS "http://$SERVER:$PORT/api/diagnostics/$endpoint" 2>/dev/null)
    
    if echo "$response" | grep -q '^{.*}$'; then
        echo "   ‚úÖ $endpoint - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç JSON"
    elif echo "$response" | grep -q '<html\|<HTML\|<!DOCTYPE'; then
        echo "   ‚ùå $endpoint - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç HTML (—Å—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è!)"
    else
        echo "   ‚ö†Ô∏è  $endpoint - –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç"
        echo "      –ü–µ—Ä–≤—ã–µ 100 —Å–∏–º–≤–æ–ª–æ–≤: ${response:0:100}"
    fi
done

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ curl —Ñ—É–Ω–∫—Ü–∏–π
echo ""
echo "4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ curl —Ñ—É–Ω–∫—Ü–∏–π..."
curl_response=$(curl -fsS -X POST "http://$SERVER:$PORT/api/samo/execute-curl" \
    -H "Content-Type: application/json" \
    -d '{"method":"SearchTour_CURRENCIES","params":""}' 2>/dev/null)

if echo "$curl_response" | grep -q '"command".*"status_code"'; then
    echo "‚úÖ Curl —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ (–≤–æ–∑–≤—Ä–∞—â–∞—é—Ç JSON)"
    # –ò–∑–≤–ª–µ–∫–∞–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–¥
    status_code=$(echo "$curl_response" | grep -o '"status_code":[0-9]*' | cut -d':' -f2)
    echo "   HTTP Status Code: $status_code"
    
    if [ "$status_code" = "403" ]; then
        echo "   ‚ö†Ô∏è  SAMO API –±–ª–æ–∫–∏—Ä—É–µ—Ç IP (–æ–∂–∏–¥–∞–µ–º–æ)"
    fi
else
    echo "‚ùå Curl —Ñ—É–Ω–∫—Ü–∏–∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç"
    echo "   Response: ${curl_response:0:200}"
fi

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ IP
echo ""
echo "5Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ IP —Å–µ—Ä–≤–µ—Ä–∞..."
server_response=$(curl -fsS "http://$SERVER:$PORT/api/diagnostics/server" 2>/dev/null)
current_ip=$(echo "$server_response" | grep -o '"external_ip":"[^"]*' | cut -d'"' -f4)

if [ -n "$current_ip" ]; then
    echo "‚úÖ IP —Å–µ—Ä–≤–µ—Ä–∞: $current_ip"
    echo "   üí° –î–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ SAMO API –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ—Ç IP"
else
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å IP —Å–µ—Ä–≤–µ—Ä–∞"
fi

# 6. –¢–µ—Å—Ç –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
echo ""
echo "6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞..."
main_page=$(curl -fsS "http://$SERVER:$PORT/" 2>/dev/null)
if echo "$main_page" | grep -q "Crystal Bay Travel"; then
    echo "‚úÖ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è"
else
    echo "‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π"
fi

samo_page=$(curl -fsS "http://$SERVER:$PORT/samo-testing" 2>/dev/null)
if echo "$samo_page" | grep -q "SAMO API"; then
    echo "‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ SAMO —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞"
else
    echo "‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π SAMO —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"
fi

# 7. –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞
echo ""
echo "üéØ –ò–¢–û–ì–û–í–ê–Ø –û–¶–ï–ù–ö–ê –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò"
echo "================================"

# –ü–æ–¥—Å—á–µ—Ç —É—Å–ø–µ—à–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫
checks_passed=0
total_checks=0

# Health
if echo "$health_response" | grep -q '"status":"healthy"'; then
    ((checks_passed++))
fi
((total_checks++))

# API endpoints
for endpoint in "${api_endpoints[@]}"; do
    response=$(curl -fsS "http://$SERVER:$PORT/api/diagnostics/$endpoint" 2>/dev/null)
    if echo "$response" | grep -q '^{.*}$'; then
        ((checks_passed++))
    fi
    ((total_checks++))
done

# Curl functions
if echo "$curl_response" | grep -q '"command".*"status_code"'; then
    ((checks_passed++))
fi
((total_checks++))

# Web interface
if echo "$main_page" | grep -q "Crystal Bay Travel"; then
    ((checks_passed++))
fi
((total_checks++))

echo "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: $checks_passed/$total_checks –ø—Ä–æ–≤–µ—Ä–æ–∫ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ"

if [ $checks_passed -eq $total_checks ]; then
    echo "üéâ –ü–†–û–î–ê–ö–®–ù –°–ï–†–í–ï–† –ü–û–õ–ù–û–°–¢–¨–Æ –°–ò–ù–•–†–û–ù–ò–ó–ò–†–û–í–ê–ù"
    echo "   –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
elif [ $checks_passed -ge $((total_checks * 3 / 4)) ]; then
    echo "‚ö†Ô∏è  –ü–†–û–î–ê–ö–®–ù –°–ï–†–í–ï–† –ß–ê–°–¢–ò–ß–ù–û –°–ò–ù–•–†–û–ù–ò–ó–ò–†–û–í–ê–ù"
    echo "   –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã"
else
    echo "‚ùå –ü–†–û–î–ê–ö–®–ù –°–ï–†–í–ï–† –ù–ï –°–ò–ù–•–†–û–ù–ò–ó–ò–†–û–í–ê–ù"
    echo "   –¢—Ä–µ–±—É–µ—Ç—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
fi

echo ""
echo "üìã –î–ï–ô–°–¢–í–ò–Ø –ü–†–ò –ü–†–û–ë–õ–ï–ú–ê–•:"
echo "1. –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É: ssh root@$SERVER"
echo "2. –ü–µ—Ä–µ–π—Ç–∏ –≤ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞: cd ~/crystalbay"
echo "3. –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã: docker-compose down"
echo "4. –û–±–Ω–æ–≤–∏—Ç—å —Ñ–∞–π–ª—ã app_api.py –∏ templates/samo_testing.html"
echo "5. –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å: docker-compose build --no-cache"
echo "6. –ó–∞–ø—É—Å—Ç–∏—Ç—å: docker-compose up -d"
echo "7. –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É: ./check_production_sync.sh"