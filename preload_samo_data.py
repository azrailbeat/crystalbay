#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π –∑–∞–≥—Ä—É–∑—á–∏–∫ —Å–ø—Ä–∞–≤–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö SAMO API
–ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏—è –∏ –∫–æ–¥—ã –¥–ª—è –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤ —Å–∏—Å—Ç–µ–º–µ
"""

import json
import time
from samo_integration import SamoAPIIntegration

def load_samo_references():
    """–ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö —Å–ø—Ä–∞–≤–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö SAMO"""
    print("üöÄ –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø—Ä–∞–≤–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ SAMO API...")
    
    samo_api = SamoAPIIntegration()
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏
    commands = {
        'currencies': 'SearchTour_CURRENCIES',
        'states': 'SearchTour_STATES',
        'cities': 'SearchTour_TOWNFROMS', 
        'hotels': 'SearchTour_HOTELS',
        'stars': 'SearchTour_STARS',
        'meals': 'SearchTour_MEALS'
    }
    
    results = {}
    
    for name, command in commands.items():
        print(f"üì• –ó–∞–≥—Ä—É–∂–∞–µ–º {name} ({command})...")
        
        try:
            result = samo_api._make_request(command, {})
            
            if result.get('success'):
                results[name] = result
                print(f"‚úÖ {name} - —É—Å–ø–µ—à–Ω–æ")
            else:
                print(f"‚ö†Ô∏è {name} - –æ—à–∏–±–∫–∞: {result.get('error', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
                results[name] = result
                
        except Exception as e:
            print(f"‚ùå {name} - –∏—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
            results[name] = {'success': False, 'error': str(e)}
        
        time.sleep(0.5)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    with open('samo_reference_data.json', 'w', encoding='utf-8') as f:
        json.dump(results, f, ensure_ascii=False, indent=2)
    
    print(f"\nüíæ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ samo_reference_data.json")
    
    # –í—ã–≤–æ–¥–∏–º –∫—Ä–∞—Ç–∫—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    success_count = sum(1 for r in results.values() if r.get('success'))
    total_count = len(results)
    
    print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {success_count}/{total_count} —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ")
    
    return results

if __name__ == "__main__":
    load_samo_references()