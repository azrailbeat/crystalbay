#!/bin/bash

# Crystal Bay Travel - Docker Run Script
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –≤ Docker

set -e

echo "üê≥ –ó–∞–ø—É—Å–∫ Crystal Bay Travel –≤ Docker..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è .env —Ñ–∞–π–ª–∞
if [ ! -f ".env" ]; then
    echo "üìã –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞ –∏–∑ —à–∞–±–ª–æ–Ω–∞..."
    cp .env.docker .env
    echo "‚ö†Ô∏è  –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª —Å –≤–∞—à–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–µ—Ä–µ–¥ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ–º!"
    echo "   nano .env"
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ .env —Ñ–∞–π–ª–∞..."
fi

# –í—ã–±–æ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
echo "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –∑–∞–ø—É—Å–∫–∞:"
echo "1) –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ (docker-compose.yml)"
echo "2) –ü—Ä–æ–¥–∞–∫—à–Ω (docker-compose.production.yml)"
read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-2): " choice

case $choice in
    1)
        COMPOSE_FILE="docker-compose.yml"
        echo "üîß –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
        ;;
    2)
        COMPOSE_FILE="docker-compose.production.yml"
        echo "üöÄ –†–µ–∂–∏–º –ø—Ä–æ–¥–∞–∫—à–Ω"
        ;;
    *)
        echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏."
        COMPOSE_FILE="docker-compose.yml"
        ;;
esac

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose -f $COMPOSE_FILE down || true

# –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤
echo "üî® –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..."
docker-compose -f $COMPOSE_FILE build --no-cache

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
echo "üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker-compose -f $COMPOSE_FILE up -d

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 10

# –ü—Ä–æ–≤–µ—Ä–∫–∞ health checks
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker-compose -f $COMPOSE_FILE ps

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo "üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
for i in {1..10}; do
    if curl -s http://localhost/health > /dev/null; then
        echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ!"
        echo "üåê –î–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost"
        echo "üìä Health check: http://localhost/health"
        echo "üîß SAMO API —Ç–µ—Å—Ç: http://localhost/samo-testing"
        break
    else
        echo "‚è≥ –ü–æ–ø—ã—Ç–∫–∞ $i/10..."
        sleep 5
    fi
done

echo ""
echo "üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "–ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤:     docker-compose -f $COMPOSE_FILE logs -f"
echo "–û—Å—Ç–∞–Ω–æ–≤–∫–∞:          docker-compose -f $COMPOSE_FILE down"
echo "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫:         docker-compose -f $COMPOSE_FILE restart"
echo "–°—Ç–∞—Ç—É—Å:             docker-compose -f $COMPOSE_FILE ps"
echo "Health check:       curl http://localhost/health"
echo "SAMO —Ç–µ—Å—Ç:          curl http://localhost/api/samo/test"
echo ""
echo "üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:"
echo "–ü–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ: cat DOCKER_GUIDE.md"
echo "–ö—Ä–∞—Ç–∫–∏–π —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫: cat DOCKER_QUICK_REFERENCE.md"
echo ""
echo "üîß –û—Ç–ª–∞–¥–∫–∞:"
echo "–õ–æ–≥–∏ –æ—à–∏–±–æ–∫:        docker-compose -f $COMPOSE_FILE logs web | grep ERROR"
echo "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î:   docker-compose -f $COMPOSE_FILE exec db psql -U crystalbay crystalbay_db"
echo "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—Ä–µ–¥—ã:   docker-compose -f $COMPOSE_FILE exec web env | grep -E '(SAMO|DATABASE|FLASK)'"