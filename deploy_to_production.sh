#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–µ Crystal Bay Travel

echo "üöÄ –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–ï –ù–ê –ü–†–û–î–ê–ö–®–ù –°–ï–†–í–ï–†–ï Crystal Bay Travel"
echo "======================================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤..."
required_files=("app_api.py" "templates/samo_testing.html" "main.py" "docker-compose.yml")
for file in "${required_files[@]}"; do
    if [ ! -f "$file" ]; then
        echo "‚ùå –§–∞–π–ª $file –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        exit 1
    fi
done
echo "‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã"

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
echo "üíæ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏..."
backup_dir="backup_$(date +%Y%m%d_%H%M%S)"
mkdir -p "$backup_dir"
cp -r app_api.py templates/ models.py crystal_bay_samo_api.py "$backup_dir/" 2>/dev/null
echo "‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞ –≤ $backup_dir"

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose down
echo "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤
echo "üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤..."
docker system prune -f
echo "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

# –°–±–æ—Ä–∫–∞ –Ω–æ–≤—ã—Ö –æ–±—Ä–∞–∑–æ–≤
echo "üî® –°–±–æ—Ä–∫–∞ –Ω–æ–≤—ã—Ö –æ–±—Ä–∞–∑–æ–≤..."
docker-compose build --no-cache
if [ $? -ne 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ –æ–±—Ä–∞–∑–æ–≤!"
    exit 1
fi
echo "‚úÖ –û–±—Ä–∞–∑—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–Ω—ã"

# –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose up -d
if [ $? -ne 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤!"
    exit 1
fi
echo "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã"

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 30

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose ps

# –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint
echo "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint..."
for i in {1..5}; do
    if curl -fsS http://127.0.0.1:5000/health >/dev/null 2>&1; then
        echo "‚úÖ Health endpoint –æ—Ç–≤–µ—á–∞–µ—Ç"
        break
    else
        echo "‚è≥ –ü–æ–ø—ã—Ç–∫–∞ $i/5..."
        sleep 10
    fi
done

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏—Ö API
echo "üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏—Ö API..."
api_endpoints=(
    "http://127.0.0.1:5000/api/diagnostics/environment"
    "http://127.0.0.1:5000/api/diagnostics/server"
    "http://127.0.0.1:5000/api/diagnostics/network"
)

for endpoint in "${api_endpoints[@]}"; do
    if curl -fsS "$endpoint" >/dev/null 2>&1; then
        echo "‚úÖ $(basename $endpoint) API —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        echo "‚ùå $(basename $endpoint) API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
    fi
done

# –ü—Ä–æ–≤–µ—Ä–∫–∞ curl —Ñ—É–Ω–∫—Ü–∏–π
echo "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ curl —Ñ—É–Ω–∫—Ü–∏–π..."
curl_test=$(curl -fsS -X POST http://127.0.0.1:5000/api/samo/execute-curl \
    -H "Content-Type: application/json" \
    -d '{"method":"SearchTour_CURRENCIES","params":""}' 2>/dev/null)

if echo "$curl_test" | grep -q '"command"'; then
    echo "‚úÖ Curl —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
else
    echo "‚ùå Curl —Ñ—É–Ω–∫—Ü–∏–∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç"
fi

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ IP
echo "üåç –ü–æ–ª—É—á–µ–Ω–∏–µ IP –∞–¥—Ä–µ—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞..."
current_ip=$(curl -fsS http://127.0.0.1:5000/api/diagnostics/server 2>/dev/null | grep -o '"external_ip":"[^"]*' | cut -d'"' -f4)
if [ -n "$current_ip" ]; then
    echo "üìç –¢–µ–∫—É—â–∏–π IP —Å–µ—Ä–≤–µ—Ä–∞: $current_ip"
    echo "‚ö†Ô∏è  –û–±–Ω–æ–≤–∏—Ç–µ –∑–∞—è–≤–∫—É –Ω–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫—É –≤ SAMO API –¥–ª—è IP: $current_ip"
else
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å IP –∞–¥—Ä–µ—Å"
fi

# –ò—Ç–æ–≥–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å
echo ""
echo "üéâ –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!"
echo "=========================="
echo "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã –∏ —Ä–∞–±–æ—Ç–∞—é—Ç"
echo "‚úÖ API endpoints –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã"
echo "‚úÖ JavaScript –æ—à–∏–±–∫–∏ —É—Å—Ç—Ä–∞–Ω–µ–Ω—ã"
echo "‚ö†Ô∏è  –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ IP –≤ SAMO API"
echo ""
echo "üåê –î–æ—Å—Ç—É–ø –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é: http://46.250.234.89:5000"
echo "üîß –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞: http://46.250.234.89:5000/samo-testing"

# –í—ã–≤–æ–¥ –ª–æ–≥–æ–≤ –≤ —Å–ª—É—á–∞–µ –ø—Ä–æ–±–ª–µ–º
if ! curl -fsS http://127.0.0.1:5000/health >/dev/null 2>&1; then
    echo ""
    echo "‚ùå –í–ù–ò–ú–ê–ù–ò–ï: Health endpoint –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç!"
    echo "üìã –õ–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:"
    docker logs --tail 20 crystalbay-web-1
fi